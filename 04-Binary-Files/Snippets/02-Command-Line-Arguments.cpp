#include <iostream>

/* Аргументи на командния ред
    *   Аргументите на командния ред са опционални аргументи, които се подават на програмата от операционната система 
        при стартирането й. Програмата после може да ги ползва като вход или изцяло да ги игнорира.
        Подобно на това как параметрите на функциите дават възможност за пренос на данни между функциите,
        аргументите на командния ред дават възможност за пренос на данни между потребители (хора или други програми) и програмата.

    *   Аргументите на командния ред се подават като стрингове и се съхраняват в масив от стрингове, който се подава на main функцията.

    *   Първият (нулевият) аргумент е името на програмата, която се изпълнява.
        На някои операционни системи този аргумент може да е празен низ.
    
    *   main функцията приема два аргумента:
        -   argc (argument count) - цяло число, което показва броя на аргументите на командния ред. 
            То винаги е поне 1, защото първият аргумент е името на програмата.
            Всеки добавен аргумент увеличава стойността на argc с 1.
        -   argv (argument values) - масив от низове, където всеки низ е аргумент.
            Този масив е с дължина argc и може да се индексира от 0 до argc - 1.
    
    *   Компилираме C++ в изпълним файл с име "program", след това стартираме програмата с аргументи по следния начин в конзолата:
        > ./program arg1 arg2 arg3
        Тук:
        argc = 4
        argv[0] = ./program
        argv[1] = arg1
        argv[2] = arg2
        argv[3] = arg3

        > ./program "Hello, World!"
        Тук:
        argc = 2
        argv[0] = ./program"
        argv[1] = Hello, World!

        > ./program \"Hello, World!\"
        Тук:
        argc = 3
        argv[0] = ./program
        argv[1] = "Hello,
        argv[2] = World!"
*/

int main(int argc, char* argv[]) {
    std::cout << "Number of arguments: " << argc << std::endl;

    for (int i{ 0 }; i < argc; ++i) {
        std::cout << "Argument " << i << ": " << argv[i] << std::endl;
    }

    return 0;
}
